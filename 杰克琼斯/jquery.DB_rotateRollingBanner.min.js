(function(a) {
    // JQ旋转插件
    a.fn.DB_rotateRollingBanner = function(b) {
        // 做一个函数
        var c = {
            key: "",
            moveSpeed: 200,
            autoRollingTime: 5000
        };
        // 函数用于将一个或多个对象的内容合并到目标对象  c会被b覆盖相同的东西
        a.extend(c, b);
        // 先return this.each(),后调用each（）方法，而each（）方法返回jQuery对象，所以这样就可以继续链式操作了。文档?
        return this.each(function() {
            // 当前大div
            var k = a(this);
            // 搜索所有段落中的后代class--.d_img为元素
            var l = k.find(".d_img");
            // console.log(l)
            // .d_img的li
            var h = l.find(">li");
            // 放小圆点处
            var j = k.find(".d_menu");
            // 小圆点li
            var r = j.find(">li");
            // 左按钮
            var z = k.find(".d_prev");
            // 右按钮
            var B = k.find(".d_next");
            // 大图的长度
            var p = h.length;
            // ？？
            var y = 4;
            var s = "next";
            var f;
            var C;
            var u = [];
            // 空数组
            var x = [];
            var m = 1;
            var t = 0;
            var o = 0;
            var v = 0;
            var e = 0;
            var arr=["img/lunbo2_190507_ESSENTIALS_bg.jpg","img/lunbo2_190429_core_bg.jpg","img/lunbo2_190422_essential_bg.jpg","img/lunbo2_190416_JiCool_bg.jpg"]
            w();
            function w() {
                
                d();
                g();
                n()
            }
            // 小图标
            function d() {
                // 返回或设置被选元素的内容--这里是返回
                j.html("");
                for (var E = 0; E < p; E++) {
                    var D = h.eq(E);
                    if (E < y) {
                        u[E] = {
                            left: D.position().left,
                            top: D.position().top,
                            zIndex: D.css("z-index"),
                            width: D.width()
                        };
                        // console.log(u[E].left)
                        D.css("left", u[E].left)
                    } else {
                        D.css("left", u[y - 1].left)
                    }
                    x.push(D);
                    // console.log(x)
                    j.append("<li></li>")
                }
                r = j.find(">li");
                r.eq(0).addClass("d_select")
            }
            // 往上往下走
            function g() {
                // 绑定事件
                k.bind("mouseenter",
                function() {
                    clearInterval(f)
                }).bind("mouseleave",
                function() {
                    n()
                });
                // 小标志点击后
                r.bind("click",
                function() {
                    // m=1 o=0
                    if (m && o != a(this).index()) {
                        t = a(this).index();
                        m = 0;
                        // abs() 方法可返回数的绝对值
                        v = Math.abs(t - o);
                        if (t > o) {
                            s = "next"
                        } else {
                            s = "prev"
                        }
                        // ceil() 方法可对一个数进行上舍入。
                        if (v > Math.ceil(p / 2)) {
                            v = p - v;
                            if (s == "next") {
                                s = "prev"
                            } else {
                                s = "next"
                            }
                        }
                        e = 0;
                        q();
                        if (v > 1) {
                            C = setInterval(function() {
                                if (m) {
                                    q();
                                    m = 0;
                                    if (e >= v) {
                                        clearInterval(C)
                                    }
                                }
                            },
                            50)
                        }
                    }
                });
                B.bind("click",
                function() {
                    if (m) {
                        s = "next";
                        m = 0;
                        if (t == p - 1) {
                            t = 0
                        } else {
                            t++
                        }
                        q()
                    }
                });
                z.bind("click",
                function() {
                    if (m) {
                        s = "prev";
                        m = 0;
                        if (t == 0) {
                            t = p - 1
                        } else {
                            t--
                        }
                        q()
                    }
                })
            }
            function q() {
                if (s == "next") {
                    for (i = 0; i < y; i++) {
                        var D = u[i - 1];
                        if (i == 0) {
                            // fadeOut() 方法使用淡出效果来隐藏被选元素  时间
                            x[i].fadeOut(c.moveSpeed)
                            // 背景图变化
                            $(".d_img").css("background",'url('+arr[t]+')');
                            $(".d_img").css("background-position",'106px 0px');
                            // console.log(arr[t])
                        } else {
                            // $("#d_tab29").css("background",'url('+arr[i]+')');
                            // console.log(arr[i])
                            x[i].css("z-index", D.zIndex).animate({
                                left: D.left,
                                top: D.top,
                                width: D.width
                            },
                            c.moveSpeed)
                        }
                    }
                    var D = u[y - 1];
                    if (x.length != y) {
                        x[y].css({
                            left: D.left,
                            top: D.top,
                            width: D.width,
                            "z-index": D.zIndex
                        }).fadeIn(c.moveSpeed,
                        function() {
                            m = 1
                        })
                    } else {
                        x[0].stop().css({
                            left: D.left,
                            top: D.top,
                            width: D.width,
                            "z-index": D.zIndex
                        }).fadeIn(c.moveSpeed,
                        function() {
                            m = 1
                        })
                    }
                    x.push(x.shift())
                } else {
                    for (i = 0; i < y; i++) {
                        var D = u[i + 1];
                        if (i == y - 1) {
                            x[i].css("z-index", 0).fadeOut(c.moveSpeed)
                        } else {
                            x[i].css("z-index", D.zIndex).animate({
                                left: D.left,
                                top: D.top,
                                width: D.width
                            },
                            c.moveSpeed)
                        }
                    }
                    var D = u[0];
                    x[x.length - 1].stop().css({
                        left: D.left,
                        top: D.top,
                        width: D.width,
                        "z-index": D.zIndex
                    }).fadeIn(c.moveSpeed,
                    function() {
                        m = 1
                    });
                    x.unshift(x.pop())
                }
                r.removeClass("d_select");
                r.eq(t).addClass("d_select");
                r.eq(t).prev().addClass("d_select");
                // h.eq(3).css("display","block")
                if(t==0){
                    r.last().addClass("d_select")
                }
                o = t;
                e++
            }
            function n() {
                f = setInterval(A, c.autoRollingTime)
            }
            // var xx=0;
            function A() {
                B.click()
               
            }
        })
    }
})(jQuery);